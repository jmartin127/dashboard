syntax = "proto3";

package jmartin127.user.v1;

option go_package = "github.com/jmartin127/dashboard/proto/gen/go/jmartin127/user/v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service Users {
  rpc AddUser (AddUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/users"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Add a new User";
			description: "Use this endpoint to add a new user to the system. Each new user must have a unique username.";
		};
  }

  rpc ModifyUser (ModifyUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/users/{user.username}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Modify an existing User";
			description: "Use this endpoint to modify an existing user. Users are uniquely identified by their username.";
		};
  }

  rpc GetUser (GetUserRequest) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/users/{username}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Retrieve an existing User";
			description: "Use this endpoint to retrieve users. Users are uniquely identified by their username.";
		};
  }

  rpc RemoveUser (RemoveUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/users/{username}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Remove an existing user";
			description: "Use this endpoint to remove users from the system. Users are uniquely identified by their username.";
		};
  }
}

message AddUserRequest {
  User user = 1 [(validate.rules).message.required = true];
}

message ModifyUserRequest {
  User user = 1 [(validate.rules).message.required = true];
}

message GetUserRequest {
  string username = 1 [(validate.rules).string.min_len = 1];
}

message GetUserReply {
  User user = 1;
}

message RemoveUserRequest {
  string username = 1 [(validate.rules).string.min_len = 1];
}

message User {
  string username = 1 [(validate.rules).string.min_len = 1];
  string email = 2 [(validate.rules).string.email = true];
  string firstName = 3 [(validate.rules).string.min_len = 1];
  string lastName = 4 [(validate.rules).string.min_len = 1];
}
